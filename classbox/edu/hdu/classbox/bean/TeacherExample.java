package edu.hdu.classbox.bean;

import java.util.ArrayList;
import java.util.List;

public class TeacherExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table teacher
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table teacher
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table teacher
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table teacher
     *
     * @mbggenerated
     */
    public TeacherExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table teacher
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table teacher
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table teacher
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table teacher
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table teacher
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table teacher
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table teacher
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table teacher
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table teacher
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table teacher
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table teacher
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andTeaNoIsNull() {
            addCriterion("TeaNo is null");
            return (Criteria) this;
        }

        public Criteria andTeaNoIsNotNull() {
            addCriterion("TeaNo is not null");
            return (Criteria) this;
        }

        public Criteria andTeaNoEqualTo(String value) {
            addCriterion("TeaNo =", value, "teaNo");
            return (Criteria) this;
        }

        public Criteria andTeaNoNotEqualTo(String value) {
            addCriterion("TeaNo <>", value, "teaNo");
            return (Criteria) this;
        }

        public Criteria andTeaNoGreaterThan(String value) {
            addCriterion("TeaNo >", value, "teaNo");
            return (Criteria) this;
        }

        public Criteria andTeaNoGreaterThanOrEqualTo(String value) {
            addCriterion("TeaNo >=", value, "teaNo");
            return (Criteria) this;
        }

        public Criteria andTeaNoLessThan(String value) {
            addCriterion("TeaNo <", value, "teaNo");
            return (Criteria) this;
        }

        public Criteria andTeaNoLessThanOrEqualTo(String value) {
            addCriterion("TeaNo <=", value, "teaNo");
            return (Criteria) this;
        }

        public Criteria andTeaNoLike(String value) {
            addCriterion("TeaNo like", value, "teaNo");
            return (Criteria) this;
        }

        public Criteria andTeaNoNotLike(String value) {
            addCriterion("TeaNo not like", value, "teaNo");
            return (Criteria) this;
        }

        public Criteria andTeaNoIn(List<String> values) {
            addCriterion("TeaNo in", values, "teaNo");
            return (Criteria) this;
        }

        public Criteria andTeaNoNotIn(List<String> values) {
            addCriterion("TeaNo not in", values, "teaNo");
            return (Criteria) this;
        }

        public Criteria andTeaNoBetween(String value1, String value2) {
            addCriterion("TeaNo between", value1, value2, "teaNo");
            return (Criteria) this;
        }

        public Criteria andTeaNoNotBetween(String value1, String value2) {
            addCriterion("TeaNo not between", value1, value2, "teaNo");
            return (Criteria) this;
        }

        public Criteria andTeaNameIsNull() {
            addCriterion("TeaName is null");
            return (Criteria) this;
        }

        public Criteria andTeaNameIsNotNull() {
            addCriterion("TeaName is not null");
            return (Criteria) this;
        }

        public Criteria andTeaNameEqualTo(String value) {
            addCriterion("TeaName =", value, "teaName");
            return (Criteria) this;
        }

        public Criteria andTeaNameNotEqualTo(String value) {
            addCriterion("TeaName <>", value, "teaName");
            return (Criteria) this;
        }

        public Criteria andTeaNameGreaterThan(String value) {
            addCriterion("TeaName >", value, "teaName");
            return (Criteria) this;
        }

        public Criteria andTeaNameGreaterThanOrEqualTo(String value) {
            addCriterion("TeaName >=", value, "teaName");
            return (Criteria) this;
        }

        public Criteria andTeaNameLessThan(String value) {
            addCriterion("TeaName <", value, "teaName");
            return (Criteria) this;
        }

        public Criteria andTeaNameLessThanOrEqualTo(String value) {
            addCriterion("TeaName <=", value, "teaName");
            return (Criteria) this;
        }

        public Criteria andTeaNameLike(String value) {
            addCriterion("TeaName like", value, "teaName");
            return (Criteria) this;
        }

        public Criteria andTeaNameNotLike(String value) {
            addCriterion("TeaName not like", value, "teaName");
            return (Criteria) this;
        }

        public Criteria andTeaNameIn(List<String> values) {
            addCriterion("TeaName in", values, "teaName");
            return (Criteria) this;
        }

        public Criteria andTeaNameNotIn(List<String> values) {
            addCriterion("TeaName not in", values, "teaName");
            return (Criteria) this;
        }

        public Criteria andTeaNameBetween(String value1, String value2) {
            addCriterion("TeaName between", value1, value2, "teaName");
            return (Criteria) this;
        }

        public Criteria andTeaNameNotBetween(String value1, String value2) {
            addCriterion("TeaName not between", value1, value2, "teaName");
            return (Criteria) this;
        }

        public Criteria andWeChatNoIsNull() {
            addCriterion("WeChatNo is null");
            return (Criteria) this;
        }

        public Criteria andWeChatNoIsNotNull() {
            addCriterion("WeChatNo is not null");
            return (Criteria) this;
        }

        public Criteria andWeChatNoEqualTo(String value) {
            addCriterion("WeChatNo =", value, "weChatNo");
            return (Criteria) this;
        }

        public Criteria andWeChatNoNotEqualTo(String value) {
            addCriterion("WeChatNo <>", value, "weChatNo");
            return (Criteria) this;
        }

        public Criteria andWeChatNoGreaterThan(String value) {
            addCriterion("WeChatNo >", value, "weChatNo");
            return (Criteria) this;
        }

        public Criteria andWeChatNoGreaterThanOrEqualTo(String value) {
            addCriterion("WeChatNo >=", value, "weChatNo");
            return (Criteria) this;
        }

        public Criteria andWeChatNoLessThan(String value) {
            addCriterion("WeChatNo <", value, "weChatNo");
            return (Criteria) this;
        }

        public Criteria andWeChatNoLessThanOrEqualTo(String value) {
            addCriterion("WeChatNo <=", value, "weChatNo");
            return (Criteria) this;
        }

        public Criteria andWeChatNoLike(String value) {
            addCriterion("WeChatNo like", value, "weChatNo");
            return (Criteria) this;
        }

        public Criteria andWeChatNoNotLike(String value) {
            addCriterion("WeChatNo not like", value, "weChatNo");
            return (Criteria) this;
        }

        public Criteria andWeChatNoIn(List<String> values) {
            addCriterion("WeChatNo in", values, "weChatNo");
            return (Criteria) this;
        }

        public Criteria andWeChatNoNotIn(List<String> values) {
            addCriterion("WeChatNo not in", values, "weChatNo");
            return (Criteria) this;
        }

        public Criteria andWeChatNoBetween(String value1, String value2) {
            addCriterion("WeChatNo between", value1, value2, "weChatNo");
            return (Criteria) this;
        }

        public Criteria andWeChatNoNotBetween(String value1, String value2) {
            addCriterion("WeChatNo not between", value1, value2, "weChatNo");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table teacher
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table teacher
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value) {
            super();
            this.condition = condition;
            this.value = value;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.betweenValue = true;
        }
    }
}